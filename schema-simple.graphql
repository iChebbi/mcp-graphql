type User {
  id: ID!
  name: String!
  email: String!
  createdAt: String!
  updatedAt: String
  posts: [Post!]!
  comments: [Comment!]!
}

type Post {
  id: ID!
  title: String!
  content: String!
  published: Boolean!
  authorId: String!
  createdAt: String!
  updatedAt: String
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  postId: String!
  authorId: String!
  createdAt: String!
  post: Post!
  author: User!
}

input CreateUserInput {
  name: String!
  email: String!
}

input UpdateUserInput {
  name: String
  email: String
}

input CreatePostInput {
  title: String!
  content: String!
  published: Boolean = false
  authorId: String!
}

input AddCommentInput {
  text: String!
  postId: String!
  authorId: String!
}

type Query {
  user(id: ID!): User
  users: [User!]!
  post(id: ID!): Post
  posts: [Post!]!
  commentsByPost(postId: String!): [Comment!]!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!
  createPost(input: CreatePostInput!): Post!
  addComment(input: AddCommentInput!): Comment!
}